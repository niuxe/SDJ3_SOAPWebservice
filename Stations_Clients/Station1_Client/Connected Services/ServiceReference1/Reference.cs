//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Station1_Client.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://service", ConfigurationName="ServiceReference1.Service")]
    public interface Service {
        
        // CODEGEN: Parameter 'searchCarReturn' requires additional schema information that cannot be captured using the parameter mode. The specific attribute is 'System.Xml.Serialization.XmlElementAttribute'.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="searchCarReturn")]
        Station1_Client.ServiceReference1.searchCarResponse searchCar(Station1_Client.ServiceReference1.searchCarRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        System.Threading.Tasks.Task<Station1_Client.ServiceReference1.searchCarResponse> searchCarAsync(Station1_Client.ServiceReference1.searchCarRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="stationTwoRegisterReturn")]
        int stationTwoRegister(string partName, string partType, double weight, string vin, int palletID);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="stationTwoRegisterReturn")]
        System.Threading.Tasks.Task<int> stationTwoRegisterAsync(string partName, string partType, double weight, string vin, int palletID);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="stationOneRegisterReturn")]
        bool stationOneRegister(string vin, string model, string brand, int car_weight);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="stationOneRegisterReturn")]
        System.Threading.Tasks.Task<bool> stationOneRegisterAsync(string vin, string model, string brand, int car_weight);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="productRegistrationReturn")]
        int productRegistration(string productName, string type, string destination);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="productRegistrationReturn")]
        System.Threading.Tasks.Task<int> productRegistrationAsync(string productName, string type, string destination);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="insertProductPartReturn")]
        bool insertProductPart(int productID, int partID);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="insertProductPartReturn")]
        System.Threading.Tasks.Task<bool> insertProductPartAsync(int productID, int partID);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="searchCar", WrapperNamespace="http://service", IsWrapped=true)]
    public partial class searchCarRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service", Order=0)]
        public string vin;
        
        public searchCarRequest() {
        }
        
        public searchCarRequest(string vin) {
            this.vin = vin;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="searchCarResponse", WrapperNamespace="http://service", IsWrapped=true)]
    public partial class searchCarResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://service", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("searchCarReturn")]
        public string[] searchCarReturn;
        
        public searchCarResponse() {
        }
        
        public searchCarResponse(string[] searchCarReturn) {
            this.searchCarReturn = searchCarReturn;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceChannel : Station1_Client.ServiceReference1.Service, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<Station1_Client.ServiceReference1.Service>, Station1_Client.ServiceReference1.Service {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Station1_Client.ServiceReference1.searchCarResponse Station1_Client.ServiceReference1.Service.searchCar(Station1_Client.ServiceReference1.searchCarRequest request) {
            return base.Channel.searchCar(request);
        }
        
        public string[] searchCar(string vin) {
            Station1_Client.ServiceReference1.searchCarRequest inValue = new Station1_Client.ServiceReference1.searchCarRequest();
            inValue.vin = vin;
            Station1_Client.ServiceReference1.searchCarResponse retVal = ((Station1_Client.ServiceReference1.Service)(this)).searchCar(inValue);
            return retVal.searchCarReturn;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Station1_Client.ServiceReference1.searchCarResponse> Station1_Client.ServiceReference1.Service.searchCarAsync(Station1_Client.ServiceReference1.searchCarRequest request) {
            return base.Channel.searchCarAsync(request);
        }
        
        public System.Threading.Tasks.Task<Station1_Client.ServiceReference1.searchCarResponse> searchCarAsync(string vin) {
            Station1_Client.ServiceReference1.searchCarRequest inValue = new Station1_Client.ServiceReference1.searchCarRequest();
            inValue.vin = vin;
            return ((Station1_Client.ServiceReference1.Service)(this)).searchCarAsync(inValue);
        }
        
        public int stationTwoRegister(string partName, string partType, double weight, string vin, int palletID) {
            return base.Channel.stationTwoRegister(partName, partType, weight, vin, palletID);
        }
        
        public System.Threading.Tasks.Task<int> stationTwoRegisterAsync(string partName, string partType, double weight, string vin, int palletID) {
            return base.Channel.stationTwoRegisterAsync(partName, partType, weight, vin, palletID);
        }
        
        public bool stationOneRegister(string vin, string model, string brand, int car_weight) {
            return base.Channel.stationOneRegister(vin, model, brand, car_weight);
        }
        
        public System.Threading.Tasks.Task<bool> stationOneRegisterAsync(string vin, string model, string brand, int car_weight) {
            return base.Channel.stationOneRegisterAsync(vin, model, brand, car_weight);
        }
        
        public int productRegistration(string productName, string type, string destination) {
            return base.Channel.productRegistration(productName, type, destination);
        }
        
        public System.Threading.Tasks.Task<int> productRegistrationAsync(string productName, string type, string destination) {
            return base.Channel.productRegistrationAsync(productName, type, destination);
        }
        
        public bool insertProductPart(int productID, int partID) {
            return base.Channel.insertProductPart(productID, partID);
        }
        
        public System.Threading.Tasks.Task<bool> insertProductPartAsync(int productID, int partID) {
            return base.Channel.insertProductPartAsync(productID, partID);
        }
    }
}
